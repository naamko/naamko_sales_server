# nginx/conf/dev.conf - DEVELOPMENT Configuration (HTTP Only)
upstream express_api_dev {
    server express-api:3000;
}

server {
    listen 80;
    listen [::]:80;
    server_name _;  # Accept any hostname for development

    # Increase client max body size for file uploads
    client_max_body_size 50M;

    # Development logging
    access_log /var/log/nginx/dev_access.log;
    error_log /var/log/nginx/dev_error.log debug;

    # CRITICAL: Serve uploads directory content - MUST come BEFORE /api/
    location ^~ /uploads/ {
        alias /app/uploads/;
        expires max;
        add_header Cache-Control "public, immutable";
        autoindex on;  # Enable directory listing for development debugging
        try_files $uri $uri/ =404;

        # Permissive CORS for development
        add_header Access-Control-Allow-Origin "*" always;
        add_header Access-Control-Allow-Methods "GET, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Origin, Content-Type, Accept" always;

        # Debug headers for development
        add_header X-Debug-Info "Served from uploads directory" always;
        add_header X-Debug-Path $request_filename always;
    }

    # API routes
    location /api/ {
        proxy_pass http://express_api_dev/api/;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Permissive CORS for development
        add_header Access-Control-Allow-Origin "*" always;
        add_header Access-Control-Allow-Methods "GET, POST, OPTIONS, PUT, DELETE, PATCH" always;
        add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization" always;
        add_header Access-Control-Allow-Credentials "true" always;

        # Handle preflight requests
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin "*" always;
            add_header Access-Control-Allow-Methods "GET, POST, OPTIONS, PUT, DELETE, PATCH" always;
            add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization" always;
            add_header Access-Control-Allow-Credentials "true" always;
            add_header Access-Control-Max-Age 1728000;
            add_header Content-Type "text/plain; charset=utf-8";
            add_header Content-Length 0;
            return 204;
        }

        # Debug headers for development
        add_header X-Debug-API "API route matched" always;
        add_header X-Debug-Method $request_method always;
    }

    # Health check
    location /health {
        proxy_pass http://express_api_dev/health;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Debug header
        add_header X-Debug-Health "Health check endpoint" always;
    }

    # Root route - API documentation
    location = / {
        proxy_pass http://express_api_dev/;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Debug header
        add_header X-Debug-Root "Root endpoint" always;
    }

    # Favicon
    location = /favicon.ico {
        log_not_found off;
        access_log off;
        return 204;
    }

    # Block access to hidden files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }

    # Development-friendly error pages with detailed info
    error_page 404 /404-dev.json;
    error_page 500 502 503 504 /50x-dev.json;

    location = /404-dev.json {
        return 404 '{"error": "Not Found", "message": "The requested resource was not found", "status": 404, "environment": "development", "timestamp": "$time_iso8601", "uri": "$request_uri"}';
        add_header Content-Type application/json always;
    }

    location = /50x-dev.json {
        return 500 '{"error": "Internal Server Error", "message": "Something went wrong", "status": 500, "environment": "development", "timestamp": "$time_iso8601", "uri": "$request_uri"}';
        add_header Content-Type application/json always;
    }
}

